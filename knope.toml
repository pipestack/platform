[packages.in-http]
versioned_files = ["crates/nodes/in-http/Cargo.toml", "Cargo.lock"]
scopes = ["in-http"]
changelog = "crates/nodes/in-http/CHANGELOG.md"
assets = "artifacts/in-http/build/*"

[packages.in-internal]
versioned_files = ["crates/nodes/in-internal/Cargo.toml", "Cargo.lock"]
scopes = ["in-internal"]
changelog = "crates/nodes/in-internal/CHANGELOG.md"
assets = "artifacts/in-internal/build/*"

[packages.out-http-webhook]
versioned_files = ["crates/nodes/out-http-webhook/Cargo.toml", "Cargo.lock"]
scopes = ["out-http-webhook"]
changelog = "crates/nodes/out-http-webhook/CHANGELOG.md"
assets = "artifacts/out-http-webhook/build/*"

[packages.out-internal]
versioned_files = ["crates/nodes/out-internal/Cargo.toml", "Cargo.lock"]
scopes = ["out-internal"]
changelog = "crates/nodes/out-internal/CHANGELOG.md"
assets = "artifacts/out-internal/build/*"

[packages.out-log]
versioned_files = ["crates/nodes/out-log/Cargo.toml", "Cargo.lock"]
scopes = ["out-log"]
changelog = "crates/nodes/out-log/CHANGELOG.md"
assets = "artifacts/out-log/build/*"

[packages.shared]
versioned_files = [{ path = "crates/nodes/in-http/Cargo.toml", dependency = "shared" }, { path = "crates/nodes/out-http-webhook/Cargo.toml", dependency = "shared" }, { path = "crates/schemas/pipeline/Cargo.toml", dependency = "shared" }, { path = "crates/services/pipeline_manager/Cargo.toml", dependency = "shared" }, "crates/shared/Cargo.toml", "Cargo.lock"]
scopes = ["shared"]
changelog = "crates/shared/CHANGELOG.md"

[[workflows]]
name = "changeset"

[[workflows.steps]]
type = "CreateChangeFile"

[[workflows]]
name = "prepare-release"

[[workflows.steps]]
type = "Command"
command = "git switch -c release"

[[workflows.steps]]
type = "PrepareRelease"

[[workflows.steps]]
type = "Command"
command = "git commit -m \"chore: prepare release\""

[[workflows.steps]]
type = "Command"
command = "git push --force --set-upstream origin release"

[[workflows.steps]]
type = "CreatePullRequest"
base = "main"

[workflows.steps.title]
template = "chore: prepare release"

[workflows.steps.body]
template = "This PR was created by Knope. Merging it will create a new release"

[[workflows]]
name = "release"

[[workflows.steps]]
type = "Release"

[github]
owner = "pipestack"
repo = "platform"
